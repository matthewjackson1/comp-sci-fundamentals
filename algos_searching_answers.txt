
### Short Answer Questions: ###

> What is a real-life scenario that uses linear search?

A: Reading down a guestlist of names for a party to find a specific name. 

> What is a real-life scenario that uses binary search?

A: Pinpointing where a bug is in the execution of some code.
 
> Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?

A: 7

> Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?

A: 3

> Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.

A: Linear search. Binary search won't be effective on an unsorted collection.

> Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.

A: Binary. Binary search will generally be much faster on a large sorted collection as it is O(log n) time complexity vs O(n) for linear search.


### Programming Assignment: ###

> You and a friend have set a wager to see who can find the word "Albatross" in the dictionary the fastest. Write a program to allow you to win the bet.

The dictionary is a sorted collection of words in alphabetical order, therefore a binary search algorithm will likely be faster.


 const binarySearch = (collection, value) => {
 	let low = collection[0];
 	let high = collection[collection.length-1];

 	while (low <= high) {
 		let mid = (low + high) / 2;
 		if (collection[mid] > value) {
 			high = mid - 1;
 		}
 		else if (collection[mid] < value) {
 			low = mid + 1;
 		}
 		else {
 			return mid;
 		};
 	};
 	return "Not found";
 }


> You work at a pet store, and a child has asked you to net the only white-spotted goldfish from the fish tank. Write a program that will help you net the right fish.


A fishtank sounds like an unsorted collection, and therefore a linear search algorithm would make more sense.

 const linearSearch = function(collection, target) {
   let result = null, value;
   for(let i = 0; i < collection.length; i++) {
     value = collection[i];
     if(value === target){
       result = i;
       break;
     }
   }
   return result;
 };




